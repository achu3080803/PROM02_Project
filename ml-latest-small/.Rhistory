dims = c(length(unique(ratings_df$movieId)), length(unique(ratings_df$userId))),
dimnames = list(paste("movieId", 1:length(unique(ratings_df$movieId)), sep = ""),
paste("userId", 1:length(unique(ratings_df$userId)), sep = "")))
c(length(unique(ratings_df$movieId)), length(unique(ratings_df$userId)))
list(paste("movieId", 1:length(unique(ratings_df$movieId)), sep = ""),
paste("userId", 1:length(unique(ratings_df$userId)), sep = ""))
list(unique(ratings_df$movieId),
unique(ratings_df$userId)
sparse_data <- sparseMatrix(i = ratings_df$movieId,
j = ratings_df$userId,
x = ratings_df$rating,
dims = c(length(unique(ratings_df$movieId)), length(unique(ratings_df$userId))),
dimnames = list(unique(ratings_df$movieId),
unique(ratings_df$userId)))
sparse_data <- sparseMatrix(i = ratings_df$movieId,
j = ratings_df$userId,
x = ratings_df$rating,
dims = c(length(unique(ratings_df$movieId)), length(unique(ratings_df$userId))))
sparse_data <- sparseMatrix(i = ratings_df$movieId,
j = ratings_df$userId,
x = ratings_df$rating)
sparse_data
length(unique(ratings_df$userId))
length(unique(ratings_df$movieId))
length(unique(ratings_df$movieId))
sparse_data <- sparseMatrix(i = ratings_df$movieId,
j = ratings_df$userId,
x = ratings_df$rating,
dims = c(9724,610))
sparse_data <- sparseMatrix(i = ratings_df$movieId,
j = ratings_df$userId,
x = ratings_df$rating,
dims = c(10000,610))
max(ratings_df$movieId)
min(ratings_df$movieId)
i <- c(1,3:8); j <- c(2,9,6:10); x <- 7 * (1:7)
(A <- sparseMatrix(i, j, x = x))                    ##  8 x 10 "dgCMatrix"
summary(A)
i <- c("a","b"); j <- c(2,9,6:10); x <- 7 * (1:7)
(A <- sparseMatrix(i, j, x = x))                    ##  8 x 10 "dgCMatrix"
summary(A)
MovieLense100
MovieLense100 <- MovieLense[rowCounts(MovieLense) >100,]
MovieLense100
sparse_data <- sparseMatrix(i = ratings_df$movieId,
j = ratings_df$userId,
x = ratings_df$rating,
dims = c(10000,610))
i <- c(1,1,2,2); j <- c(2,9,6:10); x <- 7 * (1:7)
(A <- sparseMatrix(i, j, x = x))
sparse_data <- sparseMatrix(i = ratings_df$movieId,
j = ratings_df$userId,
x = ratings_df$rating)
sparse_data <- sparseMatrix(x = ratings_df$rating,
dims = c(length(unique(ratings_df$movieId)), length(unique(ratings_df$userId))),
dimnames = list(unique(ratings_df$movieId),
unique(ratings_df$userId)))
sparse_data <- sparseMatrix(i = ratings_df$movieId,
j = ratings_df$userId,
x = ratings_df$rating)
sparse_data
rr_matrix <- new("realRatingMatrix", data = sparse_data)
rr_matrix
ratings_df
rr_matrix
similarity(rr_matrix[1:5,], method = "jaccard")
hist(rowCounts(rr_matrix))
## number of ratings per movie
hist(colCounts(MovieLense))
hist(rowCounts(MovieLense))
similarity(rr_matrix[1:5,], method = "jaccard", which = "items")
similarity(rr_matrix[1:5,], method = "jaccard", which = "users")
rr_matrix <- new("realRatingMatrix", data = sparse_data)
hist(rowCounts(rr_matrix))
summary(MovieLense)
head(as(MovieLense[1,], "list")[[1]])
head(as(rr_matrix[1,], "list")[[1]])
head(as(rr_matrix[2,], "list")[[1]])
head(as(rr_matrix[1:5,], "list")[[1]])
head(as(rr_matrix[1:5,], "list")[[1..5]])
head(as(rr_matrix[1:5,], "list")[[2]])
rowCounts(rr_matrix)
hist(colCounts(rr_matrix))
m <- matrix(sample(c(NA,0:5),100, replace=TRUE, prob=c(.7,rep(.3/6,6))),
nrow=10, ncol=10, dimnames = list(
user=paste('u', 1:10, sep=''),
item=paste('i', 1:10, sep='')
))
m
r <- as(m, "realRatingMatrix")
r
sample(c(NA,0:5),100, replace=TRUE, prob=c(.7,rep(.3/6,6)))
ratings_df
m <- matrix(,
nrow=ratings_df$movieId, ncol=ratings_df$userId,
dimnames = list(
list(unique(ratings_df$movieId),
unique(ratings_df$userId))
))
m <- matrix(,
nrow=ratings_df$movieId, ncol=ratings_df$userId,
dimnames = list(unique(ratings_df$movieId),
unique(ratings_df$userId)
))
m = matrix(, nrow = 10, ncol = 5)
m
MovieLense
m <- matrix(,
nrow=ratings_df$movieId, ncol=ratings_df$userId,
dimnames = list(unique(ratings_df$movieId),
unique(ratings_df$userId)
))
m <- matrix(,
nrow=unique(ratings_df$movieId), ncol=unique(ratings_df$userId),
dimnames = list(unique(ratings_df$movieId),
unique(ratings_df$userId)
))
unique(ratings_df$movieId)
length(unique(ratings_df$movieId))
m <- matrix(,
nrow=length(unique(ratings_df$movieId)), ncol=length(unique(ratings_df$userId)),
dimnames = list(unique(ratings_df$movieId),
unique(ratings_df$userId)
))
m
m[1][1]
ratings_df
m['1029',]
ratings_df
m['86345',]
sparse_data <- sparseMatrix(i = unique(ratings_df$movieId),
j = unique(ratings_df$userId),
x = ratings_df$rating)
for (i in 1:nrow(ratings_df)){
m[rating_df$movieId,i] <- rating_df[i]$movieId
}
for (i in 1:nrow(ratings_df)){
m[ratings_df$movieId,i] <- ratings_df[i]$movieId
}
for (i in 1:nrow(ratings_df)){
m['ratings_df$movieId',i] <- ratings_df[i]$movieId
}
m <- matrix(,
nrow=length(unique(ratings_df$movieId)), ncol=length(unique(ratings_df$userId)),
dimnames = list(unique(ratings_df$movieId),
unique(ratings_df$userId)
))
for (i in 1:nrow(ratings_df)){
m$ratings_df$movieId[i] <- ratings_df[i]$movieId
}
for (i in 1:nrow(ratings_df)){
m[As.string(ratings_df$movieId), i] <- ratings_df[i]$movieId
}
for (i in 1:nrow(ratings_df)){
m[paste(ratings_df$movieId,""), i] <- ratings_df[i]$movieId
}
for (i in 1:nrow(ratings_df)){
m[paste("'",ratings_df$movieId,"'"), i] <- ratings_df[i]$movieId
}
for (i in 1:nrow(ratings_df)){
m[paste0("'",ratings_df$movieId,"'"), i] <- ratings_df[i]$movieId
}
m = matrix(, nrow = 10, ncol = 10,
dirnames = list(
user=paste('u', 1:10, sep=''),
item=paste('i', 1:10, sep='')))
m <- matrix(,
nrow=length(unique(ratings_df$movieId)), ncol=length(unique(ratings_df$userId)),
dimnames = list(item=unique(ratings_df$movieId),
user=unique(ratings_df$userId)
))
m$item
m['86345',]
m
m['86345',]
m['86345',1]
m['1',1]
rownames(m)
unique(ratings_df$movieId)
rownames(m)
rownames(m)[1]
rownames(m)[1:10]
rownames(m)[1:10]
m
m[,1]
m['109853',1]
m['109853',]
for (i in 1:nrow(ratings_df)){
print( ratings_df[i]$movieId)
}
nrow(ratings_df)
for (i in 1:nrow(ratings_df)){
print(ratings_df[i]$movieId)
}
ratings_df
ratings_df[i]
ratings_df[1]$movieId
ratings_df[2]$movieId
ratings_df[3]$movieId
ratings_df[4]$movieId
ratings_df[4,]
ratings_df[4,]$movieId
for (i in 1:nrow(ratings_df)){
print(ratings_df[i,]$movieId)
}
for (i in 1:nrow(ratings_df)){
#print(ratings_df[i,]$movieId)
print(m[ratings_df[i,]$movieId,ratings_df[i,]$userId])
}
for (i in 1:nrow(ratings_df)){
#print(ratings_df[i,]$movieId)
print(m[ paste0("'",ratings_df[i,]$movieId,"'"), paste0("'",ratings_df[i,]$userId,"'") ] )
}
grep("109853", colnames(m))
grep("109853", rownames(m))
for (i in 1:nrow(ratings_df)){
#print(ratings_df[i,]$movieId)
print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
}
for (i in 1:nrow(ratings_df)){
#print(ratings_df[i,]$movieId)
print(grep(ratings_df[i,]$movieId, rownames(m)))
print(grep(ratings_df[i,]$userId, rownames(m)))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
}
for (i in 1:10)){
#print(ratings_df[i,]$movieId)
print(grep(ratings_df[i,]$movieId, rownames(m)))
print(grep(ratings_df[i,]$userId, rownames(m)))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
}
for (i in 1:10){
#print(ratings_df[i,]$movieId)
print(grep(ratings_df[i,]$movieId, rownames(m)))
print(grep(ratings_df[i,]$userId, rownames(m)))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
}
for (i in 1:2){
#print(ratings_df[i,]$movieId)
print(grep(ratings_df[i,]$movieId, rownames(m)))
print(grep(ratings_df[i,]$userId, rownames(m)))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
}
print(grep(ratings_df[1,]$movieId, rownames(m)))
grep("109853", rownames(m))
ratings_df[1,]$movieId
grep(ratings_df[1,]$movieId, rownames(m))
for (i in 1:2){
#print(ratings_df[i,]$movieId)
curMovieId <- ratings_df[1,]$movieId
print(grep(curMovieId, rownames(m)))
print(grep(ratings_df[i,]$userId, colnames(m)))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
}
curMovieId <- ratings_df[1,]$movieId
curMovieId
grep(curMovieId, rownames(m))
grep(paste0(curMovieId,""), rownames(m))
grep(paste0("^",curMovieId,"$"), rownames(m))
for (i in 1:2){
#print(ratings_df[i,]$movieId)
curMovieId <- ratings_df[1,]$movieId
print(grep(paste0("^",curMovieId,"$"), rownames(m)))
print(grep(paste0("^",ratings_df[i,]$userId,"$"), colnames(m)))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
}
for (i in 1:2){
#print(ratings_df[i,]$movieId)
curMovieId <- ratings_df[i,]$movieId
print(grep(paste0("^",curMovieId,"$"), rownames(m)))
print(grep(paste0("^",ratings_df[i,]$userId,"$"), colnames(m)))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
}
for (i in 1:2){
#print(ratings_df[i,]$movieId)
curMovieId <- ratings_df[i,]$movieId
print(grep(paste0("^",curMovieId,"$"), rownames(m)))
print(grep(paste0("^",ratings_df[i,]$userId,"$"), colnames(m)))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
m[paste0("^",curMovieId,"$"),paste0("^",ratings_df[i,]$userId,"$")]
}
for (i in 1:2){
#print(ratings_df[i,]$movieId)
curMovieId <- ratings_df[i,]$movieId
curUserId <- ratings_df[i,]$userId
curMovieIdx <- grep(paste0("^",curMovieId,"$"), rownames(m))
curUserIdx <- grep(paste0("^",curUserId,"$"), colnames(m))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
m[curMovieIdx,curUserIdx] <- ratings_df[i,]$rating
}
m
ratings_df
m[,1]
for (i in 1:nrow(ratings_df)){
#print(ratings_df[i,]$movieId)
curMovieId <- ratings_df[i,]$movieId
curUserId <- ratings_df[i,]$userId
curMovieIdx <- grep(paste0("^",curMovieId,"$"), rownames(m))
curUserIdx <- grep(paste0("^",curUserId,"$"), colnames(m))
#print(m[ grep(ratings_df[i,]$movieId, rownames(m)), grep(ratings_df[i,]$userId, rownames(m)) ] )
m[curMovieIdx,curUserIdx] <- ratings_df[i,]$rating
}
m[,1]
rr_matrix <- new("realRatingMatrix", data = m)
rr_matrix <- as(m, "realRatingMatrix")
head(as(rr_matrix[1:5,], "list")[[2]])
head(as(rr_matrix[1:5,], "list")[[1]])
hist(rowCounts(rr_matrix))
hist(rowCounts(MovieLense))
hist(colCounts(MovieLense))
mean(rowMeans(MovieLense))
mean(rowMeans(rr_matrix))
hist(rowMeans(rr_matrix))
similarity(rr_matrix[1:5,], method = "jaccard", which = "items")
nratings(rr_matrix)
nrow(ratings_df)
similarity(rr_matrix[1:5,], method = "jaccard", which = "users")
similarity(rr_matrix[1:5,], method = "cosine", which = "users")
similarity(rr_matrix[1:10], method = "cosine", which = "users")
similarity(rr_matrix[1:10,], method = "cosine", which = "users")
similarity(rr_matrix[,1:10], method = "cosine", which = "items")
bin_ratings_df <- ratings_df
for (i in 1:nrow(bin_ratings_df)){
if (bin_ratings_df[i,3] > 3){
bin_ratings_df[i,3] <- 1
}
else{
bin_ratings_df[i,3] <- -1
}
}
bin_ratings_df <- ratings_df
for (i in 1:nrow(bin_ratings_df)){
if (bin_ratings_df[i,3] > 3){
bin_ratings_df[i,3] <- 1
}
else{
bin_ratings_df[i,3] <- -1
}
}
#Transform the binary rating dataframe
bin_ratings_df1 <- dcast(bin_ratings_df, movieId~userId, value.var = "rating", na.rm=FALSE)
#Replace NA with 0
for (i in 1:ncol(bin_ratings_df1)){
bin_ratings_df1[which(is.na(bin_ratings_df1[,i]) == TRUE),i] <- 0
}
bin_ratings_df1 = bin_ratings_df1[,-1]
bin_ratings_df1
#Remove rows that are not rated from movies dataset
movieIds <- length(unique(movies$movieId)) #8570
ratingmovieIds <- length(unique(ratings$movieId)) #8552
movieIds <- length(unique(movies_df2$movieId)) #8570
movieIds
ratingmovieIds <- length(unique(bin_ratings_df1$movieId))
ratingmovieIds
ratingmovieIds <- length(unique(bin_ratings_df$movieId))
ratingmovieIds
#Remove rows that are not rated from movies dataset
movieIds <- length(unique(movies_df2$movieId)) #9742
ratingmovieIds <- length(unique(bin_ratings_df$movieId)) #9724
movies_df3 <- movies_df2[-which((movieIds %in% ratingmovieIds) == FALSE),]
rownames(movies_df3) <- NULL
movies_df3 <- movies_df1[-which((movieIds %in% ratingmovieIds) == FALSE),]
genre_matrix3 %>% select(1,4:22)
genre_matrix3 <- movies_df3 %>% select(1,4:22)
genre_matrix3
rownames(genre_matrix3) <- NULL
movies_df3
ratingmovieIds
length(unique(bin_ratings_df1$movieId))
ratingmovieIds <- length(unique(bin_ratings_df1$movieId))
ratingmovieIds
ratingmovieIds <- length(unique(bin_ratings_df$movieId))
bin_ratings_df1
movieIds <- unique(movies_df2$movieId) #9742
ratingmovieIds <- unique(bin_ratings_df$movieId)
movies_df3 <- movies_df1[-which((movieIds %in% ratingmovieIds) == FALSE),]
movies_df3
rownames(movies_df3) <- NULL
genre_matrix3 <- movies_df3 %>% select(1,4:22)
rownames(genre_matrix3) <- NULL
genre_matrix3
movieIds
unique(movies_df2$movieId)
movies_df2
bin_ratings_df
ratings_df
ratings_df
ratingmovieIds
result = matrix(0,19,length(unique(bin_ratings_df$userId)))
result
bin_ratings_df1
length(unique(bin_ratings_df$userId
length(unique(bin_ratings_df$userId)
length(unique(bin_ratings_df$userId))
result = matrix(0,length(genres_vector),length(unique(bin_ratings_df$userId)))
for (c in 1:ncol(bin_ratings_df1)){
for (i in 1:ncol(genre_matrix3)){
result[i,c] <- sum((genre_matrix3[,i]) * (bin_ratings_df1[,c]))
}
}
result
ncol(genre_matrix3)
bin_ratings_df1
for (c in 1:ncol(bin_ratings_df1)){
for (i in 2:ncol(genre_matrix3)){
result[i,c] <- sum((genre_matrix3[,i]) * (bin_ratings_df1[,c]))
}
}
for (c in 1:ncol(bin_ratings_df1)){
for (i in 2:ncol(genre_matrix3)){
result[i-1,c] <- sum((genre_matrix3[,i]) * (bin_ratings_df1[,c]))
}
}
#Convert to Binary scale
for (i in 1:nrow(result)){
if (result[i] < 0){
result[i] <- 0
}
else {
result[i] <- 1
}
}
result
result2 <- result[1,] #First user's profile
sim_mat <- rbind.data.frame(result2, genre_matrix3)
sim_mat <- data.frame(lapply(sim_mat,function(x){as.integer(x)})) #convert data to type integer
#Calculate Jaccard distance between user profile and all movies
library(proxy)
sim_results <- dist(sim_mat, method = "Jaccard")
sim_results <- as.data.frame(as.matrix(sim_results[1:8552]))
rows <- which(sim_results == min(sim_results))
movies[rows,2]
movies_df1[rows,2]
rows
sim_mat
movies_df3
#Calculate Jaccard distance between user profile and all movies
library(proxy)
sim_results <- dist(sim_mat, method = "Jaccard")
sim_results <- as.data.frame(as.matrix(sim_results[1:9724]))
rows <- which(sim_results == min(sim_results))
#Recommended movies
movies_df1[rows,2]
genre_matrix3
result
result2
genre_matrix3
sim_mat
result2
movies_df3[rows,2]
sim_results
sim_results
sorted_results <= sim_results[order(V1), ]
sorted_results <- sim_results[order(V1), ]
sorted_results <- sim_results[order(sim_results$V1), ]
sorted_results
genre_matrix3
sim_mat
sim_results
rows <- which(sim_results == sorted_results[1:10])
movies_df3[rows,2]
rows
sorted_results[1:10]
movies_df3[rows,1]
rows <- which(sim_results == min(sim_results))
movies_df3[rows,1]
movies_df3[rows,2]
min(sim_results)
sim_results[26701]
sim_results[26701,]
sim_results[26701,1]
sim_mat
sim_results
sim_results[26701,]
which(sim_results == min(sim_results))
rows <- which(sim_results == min(sim_results))
rows
sim_results[5544,]
movies_df3[rows,2]
rows <- which(sim_results == sorted_results[1:10])
rows
sim_results[168,]
sim_results[5608,]
sim_results[7154,]
sim_results[7627,]
sorted_results[1:10]
rows <- sim_results[between(sim_result$V1, sorted_results[1], sorted_results[10])]
rows <- sim_results[between(sim_results$V1, sorted_results[1], sorted_results[10])]
rows <- sim_results[between(sim_results, sorted_results[1], sorted_results[10])]
rows <- sim_results[between(sim_results$V1, sorted_results[1], sorted_results[10])]
sim_results$V1
sim_results[between(sim_results$V1, sorted_results[1], sorted_results[10])]
rows <- sim_results[between(sim_results$V1, 1,2)]
sorted_results <- sim_results[order(sim_results$V1), ]
sorted_results
rows <- sim_results[between(sim_results$V1, sorted_results[1,], sorted_results[10,])]
sorted_results[1]
rows <- sim_results[between(sim_results$V1, sorted_results[1], sorted_results[10])]
rows <- sim_results[between(sim_results$V1, left, right)]
left <- sorted_results[1]
right <- sorted_results[10]
rows <- sim_results[between(sim_results$V1, left, right)]
rows <- sim_results[between(sim_results$V1, 1, 10)]
?min
rows <- sim_results[between(sim_results$V1, 0.3, 10)]
rows <- filter(sim_results, V1 <= sorted_results[10])
movies_df3[rows,2]
rows
rows <- which(filter(sim_results, V1 <= sorted_results[10]))
rows <- which(sim_results <= sorted_results[10])
rows
movies_df3[rows,2]
